# -*- coding: utf-8 -*-
"""Map_osmnx_228.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T69sZuGXiLQDELsW3qUq5R4DEhQ0gKsk
"""

!pip install osmnx
!pip install folium
#try out if there is a problem with plotting
# !pip uninstall matplotlib
# !pip install matplotlib==3.1.3

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import pickle
import folium
from folium import plugins
from collections import OrderedDict
import numpy
from IPython.display import IFrame
import numpy as np
import osmnx as ox

from google.colab import drive
#drive.mount('/content/drive')

# %matplotlib inline
np.random.seed(0)
ox.__version__

towns = ['Bardowick, Bardowick, Germany',
         'Vögelsen, Bardowick, Germany' ,
         'Barum, Bardowick, Germany',
         'Handorf, Bardowick, Germany',
         'Mechtersen, Bardowick, Germany',
         'Radbruch, Bardowick, Germany',
         'Wittorf, Bardowick, Germany',
         
         'Kirchgellersen, Gellersen, Germany',
         'Reppenstedt, Gellersen, Germany',
         'Südergellersen, Gellersen, Germany',
         'Westergellersen, Gellersen, Germany',
         
         'Barnstedt, Ilmenau, Germany',
         'Deutsch Evern, Ilmenau, Germany',
         'Embsen, Ilmenau, Germany',
         'Melbeck, Ilmenau, Germany',
         
         'Barendorf, Ostheide, Germany',
         'Neetze, Ostheide, Germany',
         'Reinstorf, Ostheide, Germany',
         'Thomasburg, Ostheide, Germany',
         'Vastorf, Ostheide, Germany',
         'Wendisch Evern, Ostheide, Germany',
         
         'Artlenburg, Scharnebeck, Germany',
         'Brietlingen, Scharnebeck, Germany',
         'Echem, Scharnebeck, Germany',
         'Hittbergen, Scharnebeck, Germany',
         'Lüdersburg, Scharnebeck, Germany',
         'Rullstorf, Scharnebeck, Germany',
         'Scharnebeck, Scharnebeck, Germany',
        
        'Lüneburg, Germany',
        
        'Adendorf, Germany',
                'Amelinghausen, Amelinghausen, Germany',
         
        'Bleckede, Lüneburg, Germany',
         
        'Dahlenburg, Dahlenburg, Germany']

L = ox.graph_from_place(towns, network_type = 'drive_service', simplify=True)

# with open('routes.obj', 'rb') as f: 
#     new_routes1 = pickle.load(f)

from google.colab import drive
drive.mount('/content/drive')

with open('/content/drive/MyDrive/Colab/24-01-2022_16-12 (scencario3_LB)/24-01-2022_16-12 (scencario3_LB)/routes.obj', 'rb') as f: 
    new_routes1 = pickle.load(f)

CH_random = new_routes1['CONVEX_HULL_SEQUENCE_random']

flat_routes_0 = []
for i in range(len(CH_random[0])-1):
    r11=CH_random[15][i]
    route = []
    routes_ndopp = []
    for j in range(len(r11)):
      paths = ox.shortest_path(L, r11[j][0],r11[j][1], weight='length')
      route.append(paths)
      routes_nlast = route[:-1]
    for li in routes_nlast:
      routes_ndopp.append(li[:-1])
    routes_ndopp.append(route[-1])
    flat_route = [val for sublist in routes_ndopp for val in sublist]
    flat_routes_0.append(flat_route)

m1 = ox.plot_route_folium(L, flat_routes_0[0], route_color='pink', popup_attribute="length", route_opacity = 0.5, weight=2) 
m2 = ox.plot_route_folium(L, flat_routes_0[1], route_map=m1, route_color='green', route_opacity = 0.5, popup_attribute="length", weight=2)
m3 = ox.plot_route_folium(L, flat_routes_0[2], route_map=m2, route_color='aqua',route_opacity = 0.5, popup_attribute="length", weight=2)
m4 = ox.plot_route_folium(L, flat_routes_0[3], route_map=m3, route_color='linen', route_opacity = 0.5, popup_attribute="length", weight=2)
m5 = ox.plot_route_folium(L, flat_routes_0[4], route_map=m4, route_color='lime', route_opacity = 0.5, popup_attribute="length", weight=2)
m6 = ox.plot_route_folium(L, flat_routes_0[5], route_map=m5, route_color='violet', route_opacity = 0.5, popup_attribute="length", weight=2)
m7 = ox.plot_route_folium(L, flat_routes_0[6], route_map=m6, route_color='indigo', route_opacity = 0.5, popup_attribute="length", weight=2)
m8 = ox.plot_route_folium(L, flat_routes_0[7], route_map=m7, route_color='darkred', route_opacity = 0.5, popup_attribute="length", weight=2)
m9 = ox.plot_route_folium(L, flat_routes_0[8], route_map=m8, route_color='navy', route_opacity = 0.5, popup_attribute="length", weight=2)
m10 = ox.plot_route_folium(L, flat_routes_0[9], route_map=m9, route_color='skyblue', route_opacity = 0.5, popup_attribute="length", weight=2)
m11 = ox.plot_route_folium(L, flat_routes_0[10], route_map=m10, route_color='olive', route_opacity = 0.5, popup_attribute="length", weight=2)
m12 = ox.plot_route_folium(L, flat_routes_0[11], route_map=m11, route_color='deeppink', route_opacity = 0.5, popup_attribute="length", weight=2)
m13 = ox.plot_route_folium(L, flat_routes_0[12], route_map=m12, route_color='peru', route_opacity = 0.5, popup_attribute="length", weight=2)
m14 = ox.plot_route_folium(L, flat_routes_0[13], route_map=m13, route_color='darkgreen', route_opacity = 0.5, popup_attribute="length", weight=2)
m15 = ox.plot_route_folium(L, flat_routes_0[14], route_map=m14, route_color='red', route_opacity = 0.5, popup_attribute="length", weight=2)

m15

# save as html file then display map as an iframe
filepath = "/content/drive/MyDrive/Colab/route_graph.html"
m15.save(filepath)